plugins {
    id 'application'
    id 'maven-publish'
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compileOnly project(':serialization')
    compileOnly project(':node')
    compileOnly project(':node-api')

    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junit_jupiter_version
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junit_jupiter_version
}

mainClassName = "net.corda.flow.necromancer.MainKt"

test {
    test {
        useJUnitPlatform()
    }
}

[JavaExec, Test].forEach {
    project.tasks.withType(it).configureEach {
        doFirst {
//            jvmArgs "-Djava.system.class.loader=net.corda.flow.necromancer.DumpClassLoader"
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    compile sourcesJar
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = groupId
            artifactId = 'corda-tools-flow-necromancer'
            version = project.version
            from components.java
            artifact(sourcesJar)
        }
    }
}